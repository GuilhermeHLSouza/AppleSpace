@model List<Carrinhos>

@{
    ViewData["Title"] = "Carrinho";
    Layout = "_LayoutCarrinho";
    decimal total = Model.Sum(x => x.Produtos.Valor * x.Quantidade);
}

@if (Model.Count == 0)
{
    <div class="alert alert-info text-center">
        Seu carrinho está vazio.
    </div>
}
else
{
    <div class="d-flex flex-wrap gap-4 justify-content-center align-items-start">
        <div class="flex-grow-1" style="min-width: 600px; max-width: 900px;">
            <h2 class="fw-bold mb-4">Seu Carrinho de Compras</h2>
            <table class="table table-hover align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>Produto</th>
                        <th class="text-center">Quantidade</th>
                        <th>Valor Unitário</th>
                        <th>Subtotal</th>
                        <th>Ação</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="@item.Produtos.Img" alt="@item.Produtos.Nome" width="60" height="60" class="me-3 rounded shadow-sm" style="object-fit: contain;" />
                                    <span>@item.Produtos.Nome</span>
                                </div>
                            </td>
                            <td class="text-center">
                                <div class="d-flex justify-content-center align-items-center gap-1">
                                    <form asp-action="RemoverProdutos" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@item.IdCarrinho" />
                                        <button type="submit" class="btn btn-outline-secondary btn-sm">−</button>
                                    </form>
                                    <span class="mx-2">@item.Quantidade</span>
                                    <form asp-action="AdicionarProdutos" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@item.IdCarrinho" />
                                        <button type="submit" class="btn btn-outline-secondary btn-sm">+</button>
                                    </form>
                                </div>
                            </td>
                            <td>@item.Produtos.Valor.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("pt-BR"))</td>
                            <td>@((item.Produtos.Valor * item.Quantidade).ToString("C", System.Globalization.CultureInfo.GetCultureInfo("pt-BR")))</td>
                            <td>
                                <form asp-action="DeletarCarrinho" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@item.IdCarrinho" />
                                    <button class="btn btn-outline-danger btn-sm">Remover</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <a href="/" class="btn btn-outline-secondary mt-3">
                <i class="bi bi-arrow-left"></i> Continuar comprando
            </a>
        </div>

        <div class="flex-shrink-0" style="min-width: 300px; max-width: 360px;">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="fw-semibold mb-3">Resumo do Pedido</h5>
                    <div class="mb-3">
                        <label class="form-label">Calcular Frete</label>
                        <div class="input-group">
                            <input type="text" id="cep" class="form-control" placeholder="Digite seu CEP" />
                            <button class="btn btn-outline-primary" type="button" onclick="calcularFrete()">Calcular</button>
                        </div>
                        <p id="frete-valor" class="mt-2 text-muted"></p>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Cupom de Desconto</label>
                        <div class="input-group">
                            <input type="text" id="cupom" class="form-control" placeholder="Insira o código do cupom" />
                            <button class="btn btn-outline-success" type="button" onclick="aplicarCupom()">Aplicar</button>
                        </div>
                        <p id="cupom-msg" class="mt-2 text-muted"></p>
                    </div>
                    <hr />
                    <div class="d-flex justify-content-between">
                        <strong>Total:</strong>
                        <strong class="text-success" id="total-pedido">@total.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("pt-BR"))</strong>
                    </div>
                    <button class="btn btn-primary w-100 mt-4">Finalizar Compra</button>
                </div>
            </div>
        </div>
    </div>
}

<script>
    let valorFrete = 0;
    let descontoPorcentagem = 0;
    let valorFixo = 0;

    function calcularFrete() {
        const cep = document.getElementById("cep").value;
        const freteValor = document.getElementById("frete-valor");

        if (!cep || cep.length < 8) {
            freteValor.innerText = "CEP inválido.";
            return;
        }

        valorFrete = parseFloat((Math.random() * (20 - 10) + 10).toFixed(2));
        freteValor.innerText = `Frete estimado: R$ ${valorFrete.toFixed(2).replace('.', ',')}`;
        atualizarTotal();
    }

    function aplicarCupom() {
        const cupomInput = document.getElementById("cupom").value.trim().toUpperCase();
        const cupomMsg = document.getElementById("cupom-msg");

        fetch(`/Carrinho/ValidarCupom?codigo=${cupomInput}`)
            .then(response => response.json())
            .then(data => {
                if (!data.valido) {
                    cupomMsg.innerText = "Cupom inválido ou expirado.";
                    descontoPorcentagem = 0;
                    valorFixo = 0;
                    return;
                }

                const tipo = data.tipo.toLowerCase();
                const valor = parseFloat(data.valor);

                if (tipo === "frete") {
                    valorFrete = 0;
                    descontoPorcentagem = 0;
                    valorFixo = 0;
                    cupomMsg.innerText = "Cupom aplicado: Frete grátis.";
                } else if (tipo === "porcentagem") {
                    descontoPorcentagem = valor / 100;
                    valorFixo = 0;
                    cupomMsg.innerText = `Cupom aplicado: ${valor}% de desconto.`;
                } else if (tipo === "valorfixo") {
                    valorFixo = valor;
                    descontoPorcentagem = 0;
                    cupomMsg.innerText = `Cupom aplicado: R$ ${valorFixo.toFixed(2).replace('.', ',')} de desconto.`;
                }

                atualizarTotal();
            });
    }

    function atualizarTotal() {
        const totalElemento = document.getElementById("total-pedido");
        const totalOriginal = parseFloat('@total'.replace(',', '.'));
        let totalComFrete = totalOriginal + valorFrete;

        if (descontoPorcentagem > 0) {
            totalComFrete -= (totalComFrete * descontoPorcentagem);
        } else if (valorFixo > 0) {
            totalComFrete -= valorFixo;
        }

        if (totalComFrete < 0) totalComFrete = 0;

        totalElemento.innerText = `R$ ${totalComFrete.toFixed(2).replace('.', ',')}`;
    }

    document.getElementById("cep").addEventListener("input", function (e) {
        let cep = e.target.value.replace(/\D/g, "");
        if (cep.length > 5) {
            cep = cep.slice(0, 5) + "-" + cep.slice(5, 8);
        }
        e.target.value = cep;
    });
</script>
